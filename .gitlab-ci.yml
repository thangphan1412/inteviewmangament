image: docker:19

services:
  - docker:dind
  
stages:
  - old-build
  - new-build
  - test
  - docker-build


build-old:
  stage: old-build
  script:
    - docker version
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker run -d --name CI_REGISTRY_IMAGE $CI_REGISTRY_IMAGE
    - docker commit CI_REGISTRY_IMAGE $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    # - docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA .
    - docker stop CI_REGISTRY_IMAGE
    - docker rm CI_REGISTRY_IMAGE
    - docker image rm $CI_REGISTRY_IMAGE
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  allow_failure: true
  
maven-build:
  image: maven:3-jdk-8
  stage: new-build
  script:
    - mvn clean install -Dspring.profiles.active='dev' && mvn package -B -e -Dspring.profiles.active='dev'
  artifacts:
    paths:
      - target/*.jar

maven-test:
  image: maven:3-jdk-8
  stage: test
  script: 
    - mvn test -Dspring.profiles.active='dev'
  artifacts:
    paths:
      - target/*.jar

docker-build:
  stage: docker-build
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY 
    - docker build -t $CI_REGISTRY_IMAGE .
    - docker push $CI_REGISTRY_IMAGE
